import streamlit as st
import pandas as pd

st.set_page_config(page_title="Intelligent-System-project", layout="wide")

st.markdown('<h1 style="font-size: 40px;">üß† Neural Network Deployment</h1>', unsafe_allow_html=True)

st.write("<br>", unsafe_allow_html=True)

with st.expander("üìå **Neural Network ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£!**"):
    st.info("""
    ‡∏ô‡∏¥‡∏ß‡∏£‡∏±‡∏•‡πÄ‡∏ô‡πá‡∏ï‡πÄ‡∏ß‡∏¥‡∏£‡πå‡∏Ñ (Neural Network) ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡∏ó‡∏µ‡πà‡∏Å‡πâ‡∏≤‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡∏°‡∏≤‡∏Å‡πÉ‡∏ô‡∏ß‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏±‡∏ç‡∏ç‡∏≤‡∏õ‡∏£‡∏∞‡∏î‡∏¥‡∏©‡∏ê‡πå (AI) ‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏ó‡∏µ‡πà‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏™‡∏°‡∏≠‡∏á‡∏°‡∏ô‡∏∏‡∏©‡∏¢‡πå ‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡πÇ‡∏´‡∏ô‡∏î‡∏´‡∏£‡∏∑‡∏≠‡∏ô‡∏¥‡∏ß‡∏£‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ô‡πÉ‡∏ô‡πÄ‡∏•‡πÄ‡∏¢‡∏≠‡∏£‡πå‡∏ï‡πà‡∏≤‡∏á ‡πÜ ‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ß‡πà‡∏≤‡∏î‡∏µ‡∏õ‡πÄ‡∏•‡∏¥‡∏£‡πå‡∏ô‡∏ô‡∏¥‡πà‡∏á (Deep Learning) ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏≤‡∏Ç‡∏≤‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏Ç‡∏≠‡∏á‡πÅ‡∏°‡∏ä‡∏ä‡∏µ‡∏ô‡πÄ‡∏•‡∏¥‡∏£‡πå‡∏ô‡∏ô‡∏¥‡πà‡∏á (Machine Learning) ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏®‡∏±‡∏Å‡∏¢‡∏†‡∏≤‡∏û‡∏™‡∏π‡∏á‡∏°‡∏≤‡∏Å  
    """)

with st.expander("üìå **‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå‡∏Ç‡∏≠‡∏á Neural Network!**"):
    st.info("""
    ‡∏ô‡∏¥‡∏ß‡∏£‡∏±‡∏•‡πÄ‡∏ô‡πá‡∏ï‡πÄ‡∏ß‡∏¥‡∏£‡πå‡∏Ñ‡∏°‡∏µ‡∏´‡∏•‡∏≤‡∏¢‡∏Å‡∏£‡∏ì‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏≠‡∏∏‡∏ï‡∏™‡∏≤‡∏´‡∏Å‡∏£‡∏£‡∏°‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏°‡∏≤‡∏Å‡∏°‡∏≤‡∏¢ ‡πÄ‡∏ä‡πà‡∏ô

    - ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏ô‡∏¥‡∏à‡∏â‡∏±‡∏¢‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡∏ó‡∏¢‡πå‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡πÅ‡∏ô‡∏Å‡∏†‡∏≤‡∏û‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡∏ó‡∏¢‡πå
    - ‡∏Å‡∏≤‡∏£‡∏ï‡∏•‡∏≤‡∏î‡πÅ‡∏ö‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢‡∏™‡∏±‡∏á‡∏Ñ‡∏°‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°
    - ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≤‡∏î‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô
    - ‡∏Å‡∏≤‡∏£‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏ü‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô
    - ‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û
    - ‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏∏‡∏™‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏ó‡∏≤‡∏á‡πÄ‡∏Ñ‡∏°‡∏µ 
    """)

st.write("<br>", unsafe_allow_html=True)

st.markdown('''
    <p style="font-size: 20px;">
        From Chat Gpt Create The Dataset
        <a href="https://drive.google.com/file/d/11wC2ZALEDL3RoaUpw6Wr43rU6s8oLvFX/view" target="_blank" style="font-size: 25px; color: blue;">student-academic-performance.csv</a>.
    </p>
''', unsafe_allow_html=True)

st.write("<br>", unsafe_allow_html=True)

st.markdown('<h1 style="font-size: 40px;">üìö ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö</h1><br>', unsafe_allow_html=True)
st.markdown('''
    <p style="font-size: 20px;">
        ‡∏ä‡∏∏‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÅ‡∏•‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏±‡∏¢‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏ú‡∏•‡∏ï‡πà‡∏≠‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô (Final Grade) ‡πÇ‡∏î‡∏¢‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÄ‡∏ä‡πà‡∏ô ‡∏≠‡∏≤‡∏¢‡∏∏ ‡πÄ‡∏û‡∏® ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ô‡∏≠‡∏Å‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£ ‡πÅ‡∏•‡∏∞‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏õ‡∏Å‡∏Ñ‡∏£‡∏≠‡∏á ‡∏ã‡∏∂‡πà‡∏á‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ô‡∏≥‡πÑ‡∏õ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡πÅ‡∏•‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏±‡∏¢‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ú‡∏•‡∏ï‡πà‡∏≠‡πÄ‡∏Å‡∏£‡∏î‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÑ‡∏î‡πâ
        ‡∏Ç‡πâ‡∏≠‡∏™‡∏±‡∏á‡πÄ‡∏Å‡∏ï‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à‡∏ö‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:
            - ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≤‡∏î‡∏´‡∏≤‡∏¢ (Missing Data)
            - ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á "Study Hours" ‡πÅ‡∏•‡∏∞ "Final Grade"
            - ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô (Attendance Rate) ‡∏°‡∏µ‡∏ú‡∏•‡∏ï‡πà‡∏≠‡πÄ‡∏Å‡∏£‡∏î
            - ‡∏ú‡∏•‡∏Ç‡∏≠‡∏á‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° Extracurricular Activities ‡∏ï‡πà‡∏≠‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
            - ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏õ‡∏Å‡∏Ñ‡∏£‡∏≠‡∏á‡∏°‡∏µ‡∏ú‡∏•‡∏ï‡πà‡∏≠‡πÄ‡∏Å‡∏£‡∏î‡∏Ç‡∏≠‡∏á‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤
            - ‡∏û‡∏ö‡∏Ñ‡πà‡∏≤‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥ (Outliers) ‡πÉ‡∏ô Study Hours
    </p>
''', unsafe_allow_html=True)

st.write("<br>", unsafe_allow_html=True)

st.markdown('<h1 style="font-size: 40px;">üìä Features ‡∏´‡∏•‡∏±‡∏Å‡πÜ ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô Dataset ‡∏ô‡∏µ‡πâ</h1>', unsafe_allow_html=True)
with st.expander("üìå **Click Here to Learn More!**"):
    st.markdown("""
    - **Student ID**:  ‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤
    - **Age**: ‡∏≠‡∏≤‡∏¢‡∏∏‡∏Ç‡∏≠‡∏á‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤
    - **Gender**: ‡πÄ‡∏û‡∏®
    - **Study Hours per Week**: ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ï‡πà‡∏≠‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå
    - **Attendance Rate**: ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô (%)
    - **Extracurricular Activities**: ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡∏ó‡∏µ‡πà‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ó‡∏≥ ‡πÄ‡∏ä‡πà‡∏ô ‡∏Å‡∏µ‡∏¨‡∏≤ ‡∏î‡∏ô‡∏ï‡∏£‡∏µ ‡∏®‡∏¥‡∏•‡∏õ‡∏∞ ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ
    - **Parental Education Level**: ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏õ‡∏Å‡∏Ñ‡∏£‡∏≠‡∏á (‡∏°‡∏±‡∏ò‡∏¢‡∏°, ‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡∏ï‡∏£‡∏µ, ‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡πÇ‡∏ó ‡∏Ø‡∏•‡∏Ø)
    - **Final Grade**: ‡πÄ‡∏Å‡∏£‡∏î‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤
    """, unsafe_allow_html=True)

st.write("<br>", unsafe_allow_html=True)

st.markdown('<h1 style="font-size: 40px;">Show DataFrame As Dataset</h1>', unsafe_allow_html=True)
df = pd.read_csv("Dataset/student_academic_performance.csv")  
st.dataframe(df)  

st.write("<br>", unsafe_allow_html=True)

st.markdown("""
    <h1 style="font-size: 40px; color: #FF5733;">
        üõ†Ô∏è ‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• | ‡πÇ‡∏°‡πÄ‡∏î‡∏• | ‡∏≠‡∏±‡∏•‡∏Å‡∏≠‡∏£‡∏¥‡∏ó‡∏∂‡∏°‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏û‡∏±‡∏í‡∏ô‡∏≤
    </h1>
""", unsafe_allow_html=True)

st.write("<br>", unsafe_allow_html=True)

st.markdown('## student_academic_performance.csv')

code = '''
    # ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå CSV
    print("Upload your CSV file")
    uploaded = files.upload()
'''
st.code(code, language="python")
st.markdown('<h5 style="font-size: 20px;">‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå CSV</h5>', unsafe_allow_html=True)

st.write("<br>", unsafe_allow_html=True)

code = '''
    # ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    for filename in uploaded.keys():
    df = pd.read_csv(io.BytesIO(uploaded[filename]))
    print("\nüîç Data Preview")
    display(df.head())
    print("\nüìä Summary Statistics")
    display(df.describe())
'''
st.code(code, language="python")
st.markdown('<h5 style="font-size: 20px;">‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡πá‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• 5 ‡πÅ‡∏ñ‡∏ß‡πÅ‡∏£‡∏Å‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</h5>', unsafe_allow_html=True)

st.write("<br>", unsafe_allow_html=True)

code = '''
        # ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Target Column
    target_column = widgets.Dropdown(
        options=df.columns,
        description='üéØ Target:',
        style={'description_width': 'initial'}
    )
    display(target_column)
'''
st.code(code, language="python")

st.write("<br>", unsafe_allow_html=True)

code = '''
        # ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Features
    feature_columns = widgets.SelectMultiple(
        options=[col for col in df.columns],
        description='üìå Features:',
        style={'description_width': 'initial'}
    )
    display(feature_columns)
'''
st.code(code, language="python")
st.markdown('<h5 style="font-size: 20px;">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Features ‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞ target column ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏≠‡∏≤‡πÑ‡∏õ‡∏™‡∏£‡πâ‡∏≤‡∏á Model ‡πÅ‡∏•‡∏∞‡πÄ‡∏≠‡∏≤‡πÑ‡∏õ predict ‡∏†‡∏≤‡∏¢‡∏´‡∏ô‡πâ‡∏≤</h5>', unsafe_allow_html=True)

st.write("<br>", unsafe_allow_html=True)

code = '''
    def train_and_evaluate(target_column, feature_columns):
    if target_column and feature_columns:
        X = df[list(feature_columns)]
        y = df[target_column]
        
        # üìå ‡πÅ‡∏ö‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Train/Test
        X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
        
        # üìå Standardize ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        scaler = StandardScaler()
        X_train = scaler.fit_transform(X_train)
        X_test = scaler.transform(X_test)
        
        # üìå ‡∏™‡∏£‡πâ‡∏≤‡∏á Neural Network Model (MLPRegressor)
        model = MLPRegressor(hidden_layer_sizes=(16, 8), activation="relu", solver="adam", max_iter=500, random_state=42)
        model.fit(X_train, y_train)
        
        # üìå Evaluate Model
        y_pred = model.predict(X_test)
        
        print("\nüìà Model Performance")
        print(f"üîπ R¬≤ Score: {r2_score(y_test, y_pred):.4f}")
        print(f"üîπ Mean Absolute Error (MAE): {mean_absolute_error(y_test, y_pred):.4f}")
        print(f"üîπ Mean Squared Error (MSE): {mean_squared_error(y_test, y_pred):.4f}")
        
        # üìå Scatter Plot
        plt.figure(figsize=(8, 6))
        sns.scatterplot(x=y_test, y=y_pred, alpha=0.5)
        plt.plot([min(y_test), max(y_test)], [min(y_test), max(y_test)], color='red', linestyle="--")
        plt.xlabel("Actual Values")
        plt.ylabel("Predicted Values")
        plt.title("Actual vs. Predicted Values")
        plt.show()
'''
st.code(code, language="python")
st.markdown('<h5 style="font-size: 20px;">‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô train_and_evalute ‡πÄ‡∏û‡∏∑‡πà‡∏≠ train model ‡πÅ‡∏•‡∏∞ ‡πÄ‡∏£‡∏¥‡πà‡∏° predict model</h5>', unsafe_allow_html=True)

st.write("<br>", unsafe_allow_html=True)

code = '''
    train_button = widgets.Button(description="‚ú® Train & Evaluate Model")
    train_button.on_click(lambda x: train_and_evaluate(target_column.value, feature_columns.value))
    display(train_button)
'''
st.code(code, language="python")
st.markdown('<h5 style="font-size: 20px;">‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ train_button ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ widget ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£ train model</h5>', unsafe_allow_html=True)

st.write("<br>", unsafe_allow_html=True)
code = '''
        # ‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
    def predict_new_data():
        new_input = {}
        for feature in feature_columns.value:
            new_input[feature] = float(input(f"üìÇ Enter {feature}: "))
            
        input_df = pd.DataFrame([new_input])
        input_scaled = scaler.transform(input_df)
        prediction = model.predict(input_scaled)[0]
        print(f"üîÆ Predicted {target_column.value}: {prediction:.4f}")

    predict_button = widgets.Button(description="üîÆ Predict New Data")
    predict_button.on_click(lambda x: predict_new_data())
    display(predict_button)
'''
st.code(code, language="python")
st.markdown('<h5 style="font-size: 20px;">‡∏Å‡∏≤‡∏£‡∏û‡∏¢‡∏≤‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏Å‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà</h5>', unsafe_allow_html=True)

st.write("<br>", unsafe_allow_html=True)

st.markdown("""
    <div style="
        background-color: #1E1E1E; 
        padding: 25px; 
        border-radius: 12px;
        box-shadow: 3px 3px 12px rgba(255,255,255,0.2);
        margin: 20px 0px;
    ">
        <div>
            <h3 style="color: #FF5733;">1. ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á Regression Model</h3>
            <p style="color: #F8F8FF;">
                Regression Model ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≤‡∏î‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏Ñ‡πà‡∏≤‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏≤‡∏Å‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏≠‡∏¥‡∏ô‡∏û‡∏∏‡∏ï ‡∏ã‡∏∂‡πà‡∏á‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏ö‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡∏•‡∏±‡∏Å ‡πÜ ‡πÑ‡∏î‡πâ‡πÅ‡∏Å‡πà
            </p>
            <ul style="color: #F8F8FF;">
                <li><b>Linear Regression</b>: ‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏™‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏¥‡∏á‡πÄ‡∏™‡πâ‡∏ô <br> y = Wx + b</li>
                <li><b>Polynomial Regression</b>: ‡∏Ç‡∏¢‡∏≤‡∏¢‡∏à‡∏≤‡∏Å Linear Regression ‡πÇ‡∏î‡∏¢‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ x¬≤, x¬≥, ...</li>
                <li><b>Multiple Regression</b>: ‡∏°‡∏µ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏≠‡∏¥‡∏™‡∏£‡∏∞ <br> y = w‚ÇÅx‚ÇÅ + w‚ÇÇx‚ÇÇ + ‚ãØ + b</li>
                <li><b>Neural Network Regression</b>: ‡πÉ‡∏ä‡πâ‡πÇ‡∏Ñ‡∏£‡∏á‡∏Ç‡πà‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏™‡∏≤‡∏ó‡πÄ‡∏ó‡∏µ‡∏¢‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏´‡∏•‡∏≤‡∏¢‡∏ä‡∏±‡πâ‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô</li>
            </ul>
        </div>
    </div>
""", unsafe_allow_html=True)

st.write("<br>", unsafe_allow_html=True)

st.markdown("""
    <div style="
        background-color: #1E1E1E; 
        padding: 25px; 
        border-radius: 12px;
        box-shadow: 3px 3px 12px rgba(255,255,255,0.2);
        margin: 20px 0px;
    ">
        <div>
            <h3 style="color: #FF5733;">2. Neural Network Regression Model</h3>
            <p style="color: #F8F8FF;">
                Neural Network Regression Model ‡πÉ‡∏ä‡πâ Multilayer Perceptron (MLP) ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥ Regression ‡πÇ‡∏î‡∏¢‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏°‡∏µ‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ
            </p>
            <ul style="color: #F8F8FF;">
                <li><b>Input Layer</b>: ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ features ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏∏‡∏ì‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</li>
                <li><b>Hidden Layers</b>: ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤‡∏ú‡πà‡∏≤‡∏ô weights (W) ‡πÅ‡∏•‡∏∞ bias (b) ‡∏ï‡∏≤‡∏° Activation Function</li>
                <li><b>Output Layer</b>: ‡πÉ‡∏´‡πâ‡∏Ñ‡πà‡∏≤‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏≠‡∏≠‡∏Å‡∏°‡∏≤</li>
            </ul>
        </div>
        <div>
            <h4 style="color: #FFA07A;">üîπ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô Neural Network Regression</h4>
            <ul style="color: #F8F8FF;">
                <li><b>Activation Function:</b>
                    <ul>
                        <li>ReLU (Rectified Linear Unit): ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö hidden layer</li>
                        <li>Linear Activation (Identity Function): ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà output layer</li>
                    </ul>
                </li>
                <li><b>Loss Function:</b>
                    <ul>
                        <li>Mean Squared Error (MSE): ‡πÉ‡∏ä‡πâ‡∏ß‡∏±‡∏î‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î</li>
                        <li>Mean Absolute Error (MAE): ‡∏ß‡∏±‡∏î‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏™‡∏±‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå</li>
                    </ul>
                </li>
            </ul>
        </div>
        <div>
            <h4 style="color: #FFA07A;">üîπ ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏°‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á Neural Network Regression</h4>
            <p style="color: #F8F8FF; text-align: center;">
                y = W‚ÇÉ ‚ãÖ ReLU(W‚ÇÇ ‚ãÖ ReLU(W‚ÇÅ X + b‚ÇÅ) + b‚ÇÇ) + b‚ÇÉ
            </p>
            <p style="color: #F8F8FF;">
                ‡πÇ‡∏î‡∏¢‡∏ó‡∏µ‡πà:
                <ul>
                    <li><b>W</b> ‡πÅ‡∏•‡∏∞ <b>b</b> ‡∏Ñ‡∏∑‡∏≠ weights ‡πÅ‡∏•‡∏∞ bias ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡∏±‡πâ‡∏ô</li>
                    <li><b>ReLU</b> ‡∏Ñ‡∏∑‡∏≠ Activation Function ‡∏Ç‡∏≠‡∏á Hidden Layers</li>
                    <li>Output Layer ‡πÉ‡∏ä‡πâ <b>Linear Activation</b></li>
                </ul>
            </p>
        </div>
    </div>
""", unsafe_allow_html=True)

st.write("<br>", unsafe_allow_html=True)

st.markdown('<h1 style="font-size: 40px;">‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏≤ | ‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á</h1>', unsafe_allow_html=True)
st.markdown('''
    <p style="font-size: 20px;">
            Neural Network ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£ novelbiz.co.th
        <a href="https://www.novelbiz.co.th/neural-network/" 
           target="_blank" style="font-size: 25px; color: blue;">
           Click here
        </a>. <br>
            aws.amazon.com
        <a href="https://aws.amazon.com/th/what-is/neural-network/" 
           target="_blank" style="font-size: 25px; color: blue;">
           Click here
        </a>. <br>
            Regression ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£ ‡∏°‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢ ‡πÜ ‡∏™‡πÑ‡∏ï‡∏•‡πå‡πÄ‡∏î‡πá‡∏Å‡∏ß‡∏¥‡∏ó‡∏¢‡πå‡∏Ñ‡∏≠‡∏°‡∏Å‡∏±‡∏ô (‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1)
        <a href="https://medium.com/@2pm.tayyoshi/regression-%E0%B8%84%E0%B8%B7%E0%B8%AD%E0%B8%AD%E0%B8%B0%E0%B9%84%E0%B8%A3-%E0%B8%A1%E0%B8%B2%E0%B9%80%E0%B8%A3%E0%B8%B5%E0%B8%A2%E0%B8%99%E0%B8%A3%E0%B8%B9%E0%B9%89%E0%B9%81%E0%B8%9A%E0%B8%9A%E0%B8%87%E0%B9%88%E0%B8%B2%E0%B8%A2-%E0%B9%86-%E0%B8%AA%E0%B9%84%E0%B8%95%E0%B8%A5%E0%B9%8C%E0%B9%80%E0%B8%94%E0%B9%87%E0%B8%81%E0%B8%A7%E0%B8%B4%E0%B8%97%E0%B8%A2%E0%B9%8C%E0%B8%84%E0%B8%AD%E0%B8%A1%E0%B8%81%E0%B8%B1%E0%B8%99-%E0%B8%95%E0%B8%AD%E0%B8%99%E0%B8%97%E0%B8%B5%E0%B9%88-1-4fc7bdd57c13" 
           target="_blank" style="font-size: 25px; color: blue;">
           Click here
        </a>. 
        <br>
    </p>
''', unsafe_allow_html=True)





